name: Release

on:
  push:
    branches:
      - main
      - next

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    outputs:
      release_tag: ${{ steps.semantic_release.outputs.release_tag }}
      new_release: ${{ steps.semantic_release.outputs.new_release }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Use Node.js
        uses: actions/setup-node@v4.2.0
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm install

      - name: Semantic Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
          echo "release_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
          # Check if a new release was created by looking at the last commit message
          if git log -1 --pretty=%B | grep -q "chore(release):"; then
            echo "new_release=true" >> $GITHUB_OUTPUT
          else
            echo "new_release=false" >> $GITHUB_OUTPUT
          fi

  manage_version:
    needs: release
    if: needs.release.outputs.new_release == 'true'
    uses: ./.github/workflows/manage-major-version-tag.yml
    with:
      release_tag: ${{ needs.release.outputs.release_tag }}
    secrets: inherit
